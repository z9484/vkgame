Shoes.setup do
  gem 'activerecord'
  gem 'activesupport'
  gem 'curb'
end

require 'activerecord'
require 'curb'
Dir['app/models/*'].each do |m|
  require m
end

VK_SERVER_URL = 'http://localhost:3000'
GAME_ID = 2
DBPATH = "db/db.sqlite3"

# Generated by Sassafras
# complement1
COMPLEMENT1_DARK = rgb(64, 0, 22)
COMPLEMENT1_LIGHT = rgb(192, 128, 150)
COMPLEMENT1_DARKER = rgb(38, 0, 13)
COMPLEMENT1_LIGHTEST = rgb(242, 230, 234)
COMPLEMENT1_LIGHTER = rgb(217, 179, 192)
COMPLEMENT1_MID = rgb(128, 0, 45)
COMPLEMENT1_DARKEST = rgb(13, 0, 4)

# complement2
COMPLEMENT2_DARK = rgb(0, 64, 20)
COMPLEMENT2_LIGHT = rgb(128, 192, 148)
COMPLEMENT2_DARKER = rgb(0, 38, 12)
COMPLEMENT2_LIGHTEST = rgb(230, 242, 234)
COMPLEMENT2_LIGHTER = rgb(179, 217, 191)
COMPLEMENT2_MID = rgb(0, 128, 41)
COMPLEMENT2_DARKEST = rgb(0, 13, 4)

# base
BASE_DARK = rgb(0, 64, 0)
BASE_LIGHT = rgb(128, 192, 128)
BASE_DARKER = rgb(0, 38, 0)
BASE_LIGHTEST = rgb(230, 242, 230)
BASE_LIGHTER = rgb(179, 217, 179)
BASE_MID = rgb(0, 128, 0)
BASE_DARKEST = rgb(0, 13, 0)


ActiveRecord::Base.establish_connection({
  :adapter => 'sqlite3',
  :dbfile => DBPATH,
})

class VirtualKingdomsGame < Shoes
  # show_log
  @@email = ''
  @@password = ''
  @@character = nil

  def show_inventory
    flow :margin => [3, 3, 0, 0] do
      @@character.items.each do |item|
        stack :width => 85, :height => 60, :margin => [3, 3, 0, 0] do
          background COMPLEMENT2_MID..COMPLEMENT2_DARK
          border BASE_MID
          image "images/items/#{item.kind}/#{item.slug}.png"
        end
      end
    end
  end

  def index
    title "VK game"
    e, pw = '', ''
    stack do
      para "Email:"
      e = edit_line
      para "Password:"
      pw = edit_line :secret => true
      flow do
        b = button "Let the Adventure Begin", :width => 300 do
          para "Downloading... please be patient"
          @@email = CGI.escape('e@e.com' || e.text)
          @@password = CGI.escape('test' || pw.text)
          params = "id=#{GAME_ID}&email=#{@@email}&password=#{@@password}"
          # download "#{VK_SERVER_URL}/pages/download?#{params}", :save => DBPATH do |r|
          #   if (200..300).include?(r.response.headers['Status'].to_i)
              @@character = Character.find_or_create_by_email(@@email)
              visit '/game'
          #   else
          #     alert File.read(DBPATH)
          #     exit
          #   end
          # end
        end
      end
    end
  end

  def game
    stack do
      stack :width => 350, :height => 350 do
        background BASE_LIGHT
        flow @@character.field_flow_options do
          @field_images = []
          @@character.field_points.each do |p|
            stack :width => 68, :height => 68 do
              if @@character.point == p
                border COMPLEMENT1_LIGHTER, :strokewidth => 5
              else
                border COMPLEMENT2_LIGHTER
              end
              @field_images << image("images/terrains/#{p.terrain.color}.png", :width => 60, :height => 60, :margin => [2, 2, 0, 0], :displace_left => 3, :displace_top => 3)
            end
          end
        end
      end
      stack :height => 150 do
        @bg = background BASE_LIGHT..BASE_DARK
        border BASE_LIGHT, :strokewidth => 3
        stack :height => 75 do
          keys = %w(left right up down q)
          @status = para "Available keys: #{keys.to_sentence}"
          # button "Quit" do
          #   para "saving..."
            # params = "id=#{GAME_ID}&email=#{@@email}&password=#{@@password}"
            # c = Curl::Easy.new("#{VK_SERVER_URL}/pages/upload?#{params}")
            # c.multipart_form_post = true
            # c.http_post(Curl::PostField.file('game[data]', DBPATH))
            # if (200..300).include?(c.response_code)
            #   File.delete(DBPATH)
              # exit
            # else
            #   para "Error"
            # end
          # end
        end
        @inventory_stack = stack :height => 70 do
          show_inventory
        end
      end
    end
    keypress do |k|
      @status.text = @@character.do(k)
      @inventory_stack.clear {show_inventory} if @@character.refresh?('inventory_stack')
      @@character.field_points.zip(@field_images) do |p, i|
        i.path = "images/terrains/#{p.terrain.color}.png" unless p.terrain.nil?
      end
    end
  end

  url '/', :index
  url '/game', :game
end

Shoes.app :title => "VK game", :width => 350
